# -*- coding: utf-8 -*-
"""Heart_disease.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C3kjcRApze95EQOTgr8Z8jD3Lpq8DfKD
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np

df = pd.read_csv('/content/drive/MyDrive/datasets/heart_disease_dataset_UCI.csv')

df.shape

df.head(3)

# CHECKING FOR NULL VALUES

df.isnull().sum()

"""We dont need to perform Label encoding since,
1. sex is already in 0/1, while the other categorical values such as
2. cp(chest pain)  uses numerical codes (0-3) to represent different types of chest pain. similarly thal and slope also uses numercial labels
3. fbs, restecg,exang,  -  uses 0/1 labels

"""

# standardising the feature values to similar scale

# split the data into feature and label

X = df.iloc[ :, 0:13]
Y = df['target']

X.head(3)

Y.head(3)

# std feature values to float

from sklearn.preprocessing import StandardScaler
ss = StandardScaler()
ft = ss.fit_transform(X)

x_df = pd.DataFrame(ft)
x_df.head(3)

# Model selection

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x_df,Y, test_size = 0.20, random_state= 40)

x_df.shape,x_train.shape, x_test.shape

y_train.shape,y_test.shape

# Model 1

from sklearn.linear_model import LogisticRegression
m = LogisticRegression()
m.fit(x_train,y_train)

# Model1 evaluation

from sklearn.metrics import accuracy_score, classification_report

pred = m.predict(x_test)

accuracy_score(y_test,pred)

print(classification_report(y_test,pred))

# the model predicts 88% accuracy and has a precision of 91% for 0's (no heart
# disease) and 87% for 1's ( heart disease)
